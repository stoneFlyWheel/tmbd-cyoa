a {
  color: crimson;
}

figure {
  margin: 0 auto;
  padding: 0;
}

.main_thing {
  position: relative;
  overflow: hidden;
  margin-bottom: 10px;
}

.trigger_start {
  margin: 20px;
  text-align: center;
}

.start_button {
  background: blue;
  border: 3px outset #C5C9C1;
  outline: 3px outset blue;
  color: rgba(255, 206, 102, 1);
  font-weight: 800;
  width: 140px;
  margin: auto;
  padding: 5px;
}

.trigger_start:not([open]) > .start_button::after {
  content: 'click me to begin!';
}

.trigger_start[open] > .start_button::after {
  content: 'thank you :)'
}

.trigger_start[open] > .start_button {
  color: crimson;
  background: salmon;
  outline: 3px outset salmon;
  display: none;
}

.ucb_things {
  margin: auto;
  position: relative;
  top: -80px;
  width: 290px;
  max-height: 0;
  margin-bottom: 0;
  transition: max-height 0s, margin-bottom 0s;
  transition-delay: 0s;
}

.main_thing:has(.trigger_start[open]) .ucb_things {
  max-height: 1200px;
  margin-bottom: 55px;
}

.ucb1, .ucb2, .ucb3, .ucb4, .ucb5, .ucb6, .ucb7, .ucb8, .ucb_whatever {
  position: absolute;
  top: 91px;
  visibility: hidden;
  opacity: 0;
  transition: all 0s;
  transition-delay: 0s;
}

.main_thing:has(.trigger_start[open]) .ucb2 {
  transition-delay: 1s;
}

.main_thing:has(.trigger_start[open]) .ucb3 {
  transition-delay: 1.8s;
}

.main_thing:has(.trigger_start[open]) .ucb4 {
  transition-delay: 3.4s;
}

.main_thing:has(.trigger_start[open]) .ucb5 {
  transition-delay: 4.8s;
}

.main_thing:has(.trigger_start[open]) .ucb6 {
  transition-delay: 5.4s;
}

.main_thing:has(.trigger_start[open]) .ucb7 {
  transition-delay: 6.4s;
}

.main_thing:has(.trigger_start[open]) .ucb8 {
  transition-delay: 7.5s;
}

.main_thing:has(.trigger_start[open]) .ucb_whatever {
  transition-delay: 7.7s;
}

.main_thing:has(.trigger_start[open]) .ucb1, .main_thing:has(.trigger_start[open]) .ucb2, .main_thing:has(.trigger_start[open]) .ucb3, .main_thing:has(.trigger_start[open]) .ucb4, .main_thing:has(.trigger_start[open]) .ucb5, .main_thing:has(.trigger_start[open]) .ucb6, .main_thing:has(.trigger_start[open]) .ucb7, .main_thing:has(.trigger_start[open]) .ucb8, .main_thing:has(.trigger_start[open]) .ucb_whatever {
  visibility: visible;
  opacity: 1;
}

.main_thing:has(.trigger_start[open]) .master_wrapper {
  max-height: 2000px;
  visibility: visible;
  opacity: 1;
  transition-delay: 7.8s;
}

/* main stuff!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! */

.master_wrapper {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  visibility: invisible;
  opacity: 0;
  max-height: 0;
  transition: max-height 0s, visibility 0s, opacity 0s;
  transition-delay: 0s;
}

/* UI STUFF AAAAAAAAAAAAAAAAAAAAAAAAAAA */

.ui_wrapper {
  position: relative;
  padding: 5px;
  width: 275px;
  margin: 0 20px;
  margin-top: 42px;
  margin-bottom: 15px;
  left: 11%;
  cursor: pointer;
  z-index: 100;
  transition: 2s;
}

.ee1, .ee4 {
  display: inline-block;
}

.ee1 > span, .ee4 > span {
  color: #5D5DF5;
  font-size: 0.8em;
}

.ee1 > summary, .ee4 > summary {
  color: blue;
  font-size: 1em;
}

.ee3 {
  position: absolute;
  font-size: 0.65em;
  color: #CC2806;
  text-shadow: 0px 0px 7px #F75A11;
  width: 80px;
  overflow-wrap: break-word;
  top: 120px;
  right: 3px;
}

.ui_top1 {
  width: 100px;
  height: 74px;
  background: conic-gradient(from 90deg, transparent 50%, rgba(255, 206, 102, 1) 50%);
  border-radius: 50% 50%;
  position: absolute;
  top: -30px;
  left: 5px;
  z-index: 49;
}

.ui_top2 {
  width: 120px;
  height: 55px;
  background: conic-gradient(from 90deg, transparent 50%, blue 50%);
  border-radius: 50% 50%;
  position: absolute;
  top: -22px;
  left: 55px;
}

.ui_top_text {
  font-family: sans-serif;
  color: white;
  text-shadow: 1px 2px 3px lightblue;
  position: absolute;
  top: -16px;
  left: 20px;
  z-index: 50;
}

.ui_body {
  background: rgba(210, 210, 210, 1);
  border-top: 2px solid blue;
  border-bottom: 2px solid rgba(255, 206, 102, 1);
  border-right: 2px solid blue;
  border-left: 2px solid rgba(255, 206, 102, 1);
  padding: 10px;
  height: 170px;
  font-family: monospace;
  color: blue;
}

.ui_body_bar {
  background: blue;
  color: rgba(255, 206, 102, 1);
  padding: 2px;
  padding-left: 4px;
  border: 2px outset #C5C9C1;
  outline: 2px outset blue;
  margin-bottom: 5px;
}

.ui_body_header {
  background: linear-gradient(135deg,rgba(255, 206, 102, 1) 0%, rgba(255, 206, 102, 1) 47%, orange 47%, orange 49%, blue 49%, transparent 80%);
  margin: -10px;
  margin-bottom: 10px;
  padding: 5px;
  padding-left: 15px;
  color: blue;
  font-weight: 600;
}

.ui_body_footer {
  background: linear-gradient(315deg, blue 0%, blue 62%, orange 62%, orange 64%, rgba(255, 206, 102, 1) 64%, transparent 90%);
  margin: -10px;
  margin-top: 42px;
  padding: 5px;
  padding-right: 15px;
  color: rgba(255, 206, 102, 1);
  text-align: right;
  font-size: 0.8em;
  font-family: serif;
}

.ui_cover {
  position: absolute;
  right: 20px;
  bottom: 43px;
}

.ui_cover:not([open]) > .ui_cover_summ::after {
  background: blue;
  color: rgba(255, 206, 102, 1);
  padding: 2px 4px;
  border: 2px outset #C5C9C1;
  outline: 2px outset blue;
  font-size: 1em;
  content: "ok";
  position: absolute;
}

.ui_cover:not([open]) > .num_one_summ.ui_cover_summ::after {
  right: -2px;
  bottom: 1px;
}

.ui_cover:not([open]) > .num_two_summ.ui_cover_summ::after, .ui_cover:not([open]) > .num_three_summ.ui_cover_summ::after, .ui_cover:not([open]) > .num_four_summ.ui_cover_summ::after {
  right: -9px;
  bottom: -35px;
}

.ui_cover[open] > .ui_cover_summ::after {
  background: blue;
  color: rgba(255, 206, 102, 1);
  padding: 2px 4px;
  border: 2px outset #C5C9C1;
  outline: 2px outset blue;
  font-size: 1em;
  content: "back";
  position: absolute;
  left: 11px;
  bottom: 8px;
}

.ui_cover[open] { 
  background: rgba(210, 210, 210, 1);
  z-index: 100;
  width: 251px;
  height: 119px;
  position: absolute;
  padding: 10px;
}

.ui_cover[open].num_one {
  left: 7px;
  top: 32px;
}

.ui_cover[open].num_two, .ui_cover[open].num_three, .ui_cover[open].num_four  {
  background: rgba(210, 210, 210, 1);
  left: 0;
  top: 0;
}

.num_four:not([open]) > .num_four_summ {
  visibility: hidden;
  opacity: 0;
  transition: all 0.3s;
}

.num_four[open] > .num_four_summ {
  visibility: visible;
  opacity: 1;
  transition: all 0s;
}

.ui_cover:not([open]).num_two_summ, .ui_cover:not([open]).num_three_summ, .ui_cover:not([open]).num_four_summ {
  left: 7px;
  top: 1px;
}

figure.main_thing:has(details.parent_details:not([open]) > details.cu2[open]):has(details.book_mark_read[open]) .num_four:not(open) > .num_four_summ {
  visibility: visible;
  opacity: 1;
  transition-delay: 0.5s;
}

figure.main_thing:has(details.parent_details:not([open]) > details.cu1[open]) .num_four:not(open) > .num_four_summ {
  visibility: visible;
  opacity: 1;
  transition-delay: 0.5s;
}

details > summary {
  list-style-type: none;
}

details > summary::-webkit-details-marker {
  display: none;
}

details > summary::before {
  content: '';
}

details[open] > summary::before {
  content: '';
}

.ui_cxn_bar {
  background: #2F302D;
  color: #C5C9C1;
  text-align: center;
  padding: 3px 8px;
  border: 2px solid #C5C9C1;
  outline: 2px solid #2F302D;
  margin: auto;
  margin-bottom: 25px;
  margin-top: -10px;
  font-family: monospace;
  cursor: pointer;
  width: 270px;
}

.ui_text_container {
  max-height: 4.6em;
  overflow-y: scroll;
  background: rgba(0,0,0,0.1);
  padding-left: 4px;
  margin: 2px 4px;
}

.uitc_parent {
  max-height: 115px;
}

figure.main_thing:has(.option_work:not([open])) .work_cover, figure.main_thing:has(.option_settings:not([open])) .settings_cover, figure.main_thing:has(.option_report:not([open])) .report_cover {
  display: none;
}

figure.main_thing:has(.option_work[open]) .work_cover, figure.main_thing:has(.option_settings[open]) .settings_cover, figure.main_thing:has(.option_report[open]) .report_cover {
  display: visible;
  background: rgba(210, 210, 210, 1);
  z-index: 100;
  width: 251px;
  height: 121px;
  position: absolute;
  left: 0;
  top: 0;
  padding: 10px;
}

.option_work:not([open]) > summary::after {
  content: 'WORK';
}

.option_settings:not([open]) > summary::after {
  content: 'SETTINGS';
}

.option_report:not([open]) > summary::after {
  content: 'REPORT';
}

.option_quit:not([open]) > summary::after {
  content: 'QUIT';
}

.option_work[open] > summary::after, .option_settings[open] > summary::after, .option_report[open] > summary::after {
  content: 'ⓧ';
  font-size: 1.2em;
  color: blue;
  text-shadow: 0px 0px 5px rgba(255, 206, 102, 1);
  position: absolute;
  right: 10px;
  top: -20px;
  z-index: 5000;
}

.rb_childwrapper {
  display: flex;
  background: rgba(0,0,0,0.1);
  margin-bottom: 4px;
  border-radius: 100% 300%;
  border-top-left-radius: 30px 30px;
}

.report_button > summary::after
{
  width: 20px;
  height: 20px;
  flex-shrink: 0;
  display: flex;
  flex: 1;
  align-items: center;
  justify-content: center;
  gap: 10px;
  font-size: 1.5em;
  border-radius: 50% 50%;
}

.report_button:not([open]) > summary::after {
  content: '✖';
  color: rgba(255, 206, 102, 1);
  background: blue;
}

.report_button[open] > summary::after {
  content: '✓';
  color: blue;
  background: rgba(255, 206, 102, 1);
}

.report_button_caption {
  margin-left: 10px;
}

.report_button_clicked {
  display: none;
}

figure.main_thing:has(.report_button[open]) .report_button_clicked {
  display: inline;
}

.report_button_clicked:not([open]) > summary {
  text-align: center;
  background: blue;
  color: rgba(255, 206, 102, 1);
  margin: 3px auto;
  padding: 2px 5px;
  border-radius: 5px 5px;
}

.report_button_clicked:not([open]) > summary::after {
  content: 'Submit report?'
}

.report_button_clicked[open] > summary {
  text-align: center;
  background: rgba(255, 206, 102, 1);
  color: blue;
  margin: 3px auto;
  padding: 2px 5px;
  border-radius: 5px 5px;
}

.report_button_clicked[open] > summary::after {
  content: 'Report submitted!'
}

/* DEVICE STUFF AAAAAAAAAAAAAAAAAAAAAAAAAAA */

.device_wrapper {
  position: relative;
  margin: 15px 20px;
  padding: 5px;
  cursor: pointer;
  left: -10%;
  visibility: hidden;
  opacity: 0;
  transition: 2s;
  transition-delay: 0s;
  width: 200px;
}

.device_body {
  background: rgba(37, 51, 79, 0.8);
  border: 5px solid #2D3940;
  box-shadow: 7px 4px 15px rgba(50, 50, 50, 0.3);
  color: white;
  text-shadow: 1px 1px 3px rgba(138, 209, 196, 0.8);
  border-radius: 10px 10px;
  padding: 7px;
  height: 200px;
  position: relative;
  overflow: hidden;
}

/* LOGIC with ui AAAAAAAAAAAAAAA */

.master_wrapper:has(.ui_cover.num_three[open]) .device_wrapper {
  visibility: visible;
  opacity: 1;
  left: 0;
  transition-delay: 1.3s;
}

.master_wrapper:has(.ui_cover.num_three[open]) .ui_wrapper {
  left: 0;
  transition-delay: 1.3s;
}

/* ok all over now */

.device_app {
  width: 50px;
  height: 50px;
  border-radius: 10px 10px;
  border: 5px solid transparent;
  margin: 5px;
  background: white;
  color: transparent;
  font-size: 0;
  transition: color 0.1s, font-size 0s;
  transition-delay: 0s;
} 

.kjm_turbotune {
  border: 5px double blue;
  outline: 2px solid blue;
  background: rgba(255, 206, 102, 1);
  margin-right: auto;
  position: absolute;
  z-index: 100;
}

.device_app_actual {
  width: 0;
  height: 0;
  border: 0;
  transition: background 0.3s ease-out, width 0.3s ease-out, height 0.3s ease-out, border 0.3s ease-out, color 0.3s ease-out, text-shadow 0.3s ease-out;
}

details.trigger_kjmtt[open] ~ .daa_kjmtt {
  position: absolute;
  top: 0px;
  left: 0px;
  background: rgba(210, 210, 210, 1);
  width: 181px;
  height: 204px;
  border-radius: 7px 7px;
  padding: 5px;
}

details.trigger_kjmtt[open] > .kjm_turbotune {
  position: absolute;
  top: 0px;
  right: -25px;
  background: transparent;
  border: 0;
  outline: 0;
  color: white;
  font-size: 1.1em;
  text-shadow: 1px 1px 3px rgba(138, 209, 196, 0.8);
  transition-delay: 0.5s;
}

details.trigger_kjmtt:not([open]) ~ .daa_kjmtt > * {
  color: transparent;
  text-shadow: 0px 0px 0px transparent;
}

details.trigger_kjmtt[open] ~ .daa_kjmtt > .kjmtt_header {
  background: blue;
  height: 30px;
  border-top-left-radius: 7px 7px;
  border-top-right-radius: 7px 7px;
  padding: 7px;
  margin: -5px;
  margin-bottom: 5px;
  color: rgba(255, 206, 102, 1);
  text-shadow: 1px 1px 3px rgba(138, 209, 196, 0.8);
}

.main_thing:has(details.trigger_kjmtt[open]) .app_books {
  display: none;
  position: absolute;
  right: 10px;
  top: -100px;
}

.tiny_text {
  font-size: 0.6em;
  padding-left: 15px;
  margin-top: 1px;
}

.device_upload {
  transition: all 0s linear;
}

.device_upload:not([open]) > summary {
  background: rgba(0,0,0,0.1);
}

.device_upload:not([open]) > summary::after {
  font-family: monospace;
  color: blue;
  padding-left: 4px;
  line-height: 0.8em;
  content: "Upload files to TurboTune...";
  transition: all 0s linear;
}

.device_upload[open] {
  position: inherit;
  top: 0px;
  left: 0px;
  background: rgba(100, 100, 100, 0.4);
  width: 181px;
  height: 204px;
  border-radius: 7px 7px;
  padding: 5px;
  z-index: 200;
  transition: all 0.4s linear;
}

.device_upload[open] > summary::after {
  content: "exit";
  position: absolute;
  right: 10px;
  top: 7px;
  padding: 2px 4px;
  background: blue;
  border: 3px outset #C5C9C1;
  outline: 3px outset blue;
  color: rgba(255, 206, 102, 1);
}

.device_upload[open] > div {
  position: relative;
  top: 40px;
  height: 165px;
  overflow-y: scroll;
  z-index: 75;
}

.main_thing:has(details.trigger_kjmtt:not([open])) .device_upload > summary::after {
  display: none;
}

.device_upload_image {
  height: 50px;
  width: 50px;
  position: absolute;
  top: 15px;
}

.dui_actual {
  left: 25px;
}

.dui_lol {
  right: 15px;
}

.dui_nope {
  left: 25px;
  top: 130px;
}

figure.main_thing:has(details.book_mark_read:not([open])) .file_maybe_book {
  display: none;
}

.dui_caption_actual {
  font-size: 0.6em;
  width: 70px;
  overflow-wrap: break-word;
  text-align: center;
  position: absolute;
  left: 10px;
  top: 70px;
}

.dui_caption_lol {
  font-size: 0.6em;
  width: 70px;
  overflow-wrap: break-word;
  text-align: center;
  position: absolute;
  right: 10px;
  top: 70px;
}

.dui_caption_nope {
  font-size: 0.6em;
  width: 70px;
  overflow-wrap: break-word;
  text-align: center;
  position: absolute;
  left: 10px;
  top: 185px;
}

.upload_confirm {
  position: relative;
  z-index: 1000;
  background: pink;
  width: 90px;
  height: 80px;
  text-align: center;
}

.dui_cover_maybe {
  background: yellow;
  position: absolute;
  top: 5px;
  z-index: 1000;
  height: 110px;
  width: 85px;
}

.dui_cover_maybe2 {
  background: green;
  position: absolute;
  top: 5px;
  right: 5px;
  z-index: 1000;
  height: 110px;
  width: 75px;
}

.app_books {
  border: 2px solid white;
  outline: 5px ridge crimson;
  background: black;
  margin-left: auto;
  position: absolute;
  right: 10px;
  top: 10px;
  z-index: 100;
}

details.trigger_books[open] ~ .daa_books {
  position: absolute;
  top: 0px;
  left: 0px;
  background: black;
  width: 181px;
  height: 204px;
  border-radius: 7px 7px;
  padding: 5px;
  color: lightgrey;
  text-shadow: 0px 0px 0px transparent;
  font-size: 1.3em;
  overflow-y: scroll;
  overflow-wrap: break-word;
}

details.trigger_books[open] > .app_books {
  position: absolute;
  top: 0px;
  right: -25px;
  background: transparent;
  border: 0;
  outline: 0;
  color: white;
  font-size: 1.1em;
  text-shadow: 1px 1px 3px rgba(138, 209, 196, 0.8);
  transition-delay: 0.5s;
}

details.trigger_books:not([open]) ~ .daa_books {
  color: transparent;
  text-shadow: 0px 0px 0px transparent;
  opacity: 0;
  visibility: hidden;
  transition: all 0.28s ease-out;
}

.main_thing:has(details.trigger_books[open]) .kjm_turbotune {
  display: none;
}

.books_end_link {
  text-align: center;
  font-size: 0.8em;
}

.daa_books > details {
  color: grey;
  font-size: 0.7em;
}

.daa_books > details > summary {
  color: lightgrey;
  font-size: 1.4em;
}

.indent {
  margin-left: 15px;
}

.book_mark_read:not([open]) > summary::after {
  content: 'Mark complete? ✓';
  background: crimson;
  border: 2px solid crimson;
  padding: 2px 4px;
  border-radius: 5px 5px;
  font-size: 0.8em;
  margin-bottom: 20px;
  color: black;
  text-shadow: 0px 0px 0px transparent;
}

.book_mark_read[open] > summary::after {
  content: 'Completed! ✖';
  background: black;
  border: 2px solid crimson;
  padding: 2px 4px;
  border-radius: 5px 5px;
  font-size: 0.8em;
  margin-bottom: 20px;
  color: crimson;
  text-shadow: 0px 0px 0px transparent;
}

.parent_details[open] > summary > img {
  display: none;
}

.parent_details[open] > summary > div {
  display: none;
}

.parent_details[open]:has(> .cu1) > summary::after {
  position: absolute;
  color: blue;
  z-index: 5000;
  left: 67px;
  top: 3px;
  content: 'ⓧ';
}

.parent_details[open]:has(> .cu2) > summary::after {
  position: absolute;
  color: blue;
  z-index: 5000;
  right: 3px;
  top: 3px;
  content: 'ⓧ';
}

.confirm_upload {
  width: 77px;
  height: 106px;
  background: rgba(210, 210, 210, 1);
  border-radius: 5px 5px;
  position: absolute;
  padding: 5px;
  box-shadow: 3px 3px 3px grey;
}

.confirm_upload > summary > div {
  text-align: center;
  border-radius: 5px 5px;
  font-size: 0.8em;
  padding: 5px 0;
  margin-top: 28px;
  border: 1px solid blue;
  background: rgba(255, 206, 102, 1);
  color: blue;
  font-weight: 800;
}

.confirm_upload[open] > summary > div {
  text-align: center;
  border-radius: 5px 5px;
  font-size: 0.8em;
  padding: 5px 2px;
  margin-top: 28px;
  border: 1px solid rgba(255, 206, 102, 1);
  background: blue;
  color: rgba(255, 206, 102, 1);
  font-weight: 800;
}

.confirm_upload > summary > div::after {
  content: 'Confirm Upload?';
}

.confirm_upload[open] > summary > div::after {
  content: 'Upload Confirmed!';
}

.cu1 {
  top: 2px;
}

.cu2 {
  top: 2px;
  right: 0;
}

.invis_cover {
  visibility: hidden;
  opacity: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-weight: 800;
  width: 77px;
  height: 110px;
  border-radius: 5px 5px;
  border: 5px solid rgba(170, 100, 100, 0.1);
  background: rgba(200, 90, 90, 0.05);
  position: absolute;
  color: #CC2806;
  text-shadow: 0px 0px 7px #F75A11;
}

.ic1 {
  top: 3px;
}

.ic2 {
  top: 3px;
  right: 0;
}

/* if actual's upload has been confirmed & closed, show invis_cover #1 */
figure.main_thing:has(details.parent_details:not([open]) > details.cu1[open]) .invis_cover.ic1 {
  visibility: visible;
  opacity: 1;
}

/* if lol's upload has been confirmed & closed, show invis_cover #1 */
figure.main_thing:has(details.parent_details:not([open]) > details.cu2[open]) .invis_cover.ic1 {
  visibility: visible;
  opacity: 1;
}

/* if lol's upload has been confirmed & closed, AND book_mark_read HAS been clicked, DO show invis_cover #2 */
figure.main_thing:has(details.parent_details:not([open]) > details.cu2[open]):has(details.book_mark_read[open]) .invis_cover.ic2 {
  visibility: visible;
  opacity: 1;
}

/* if actual's upload has been confirmed & closed, AND book_mark_read HAS been clicked, DO show invis_cover #2 */
figure.main_thing:has(details.parent_details:not([open]) > details.cu1[open]):has(details.book_mark_read[open]) .invis_cover.ic2 {
  visibility: visible;
  opacity: 1;
}

/* work tab */

.work_cover_upload {
  display: inline;
  overflow-wrap: break-word;
  background: rgba(0, 0, 0, 0.1);
}

/* if work tab is open & actual file has been uploaded */
figure.main_thing:has(details.option_work[open]):has(details.parent_details:not([open]) > details.cu1[open]) .work_cover_upload::after {
  content: 'KJM_CYA_CSU_H3iP5thsMXVJaX+/DAf6Qw==.sh';
}

/* if work tab is open & lol file has been uploaded */
figure.main_thing:has(details.option_work[open]):has(details.parent_details:not([open]) > details.cu2[open]) .work_cover_upload::after {
  content: 'Sherlock Holmes: A Complete Omnibus.epub';
}

.work_upload_button2:not([open]) > summary {
  width: 170px;
  margin: 10px auto;
  background: blue;
  color: rgba(255, 206, 102, 1);
  padding: 2px;
  padding-left: 4px;
  border: 2px outset #C5C9C1;
  outline: 2px outset blue;
  text-align: center;
}

.work_upload_button2:not([open]) > summary::after {
  content: 'Begin file transfer?'
}

/* ENDINGS WOOOOOOOOOOOOOOOOOOOOO */

.ending1, .ending2, .ending3, .ending4, .ending5, .ending6 {
  display: none;
}

/* if requirements for ending have triggered, display ending */
/* specifics:
  1: if a file has been uploaded with actual's file confirm open
  2: if a file has been uploaded with lol's file confirm open
  3: if a report has been submitted with either ending 3 trigger selected
  4: if the quit button has been clicked
  5: if a report has been submitted with the ending 5 trigger selected
  6: if a report has been submitted with every report button pressed
*/
figure.main_thing:has(details.option_work[open]):has(details.parent_details:not([open]) > details.cu1[open]):has(.work_upload_button2[open]) .ending1, figure.main_thing:has(details.option_work[open]):has(details.parent_details:not([open]) > details.cu2[open]):has(.work_upload_button2[open]) .ending2, figure.main_thing:has(.report_button_clicked[open]):has(.trigger_ending3[open]) .ending3, figure.main_thing:has(.trigger_ending4[open]) .ending4, figure.main_thing:has(.report_button_clicked[open]):has(.trigger_ending5[open]) .ending5, figure.main_thing:has(.report_button_clicked[open]):has(.rb1[open]):has(.rb2[open]):has(.rb3[open]):has(.rb4[open]):has(.rb5[open]):has(.rb6[open]):has(.rb7[open]):has(.rb8[open]):has(.rb9[open]) .ending6 {
  display: inline;
}

/* if a report is submitted with both an ending 3 trigger and the ending 5 trigger, don't display ending 5*/
figure.main_thing:has(.report_button_clicked[open]):has(.trigger_ending3[open]):has(.trigger_ending5[open]) .ending5 {
  display: none !important;
}

/* if all report options have been pressed, don't show endings 3 & 5*/
figure.main_thing:has(.report_button_clicked[open]):has(.rb1[open]):has(.rb2[open]):has(.rb3[open]):has(.rb4[open]):has(.rb5[open]):has(.rb6[open]):has(.rb7[open]):has(.rb8[open]):has(.rb9[open]) .ending3, figure.main_thing:has(.report_button_clicked[open]):has(.rb1[open]):has(.rb2[open]):has(.rb3[open]):has(.rb4[open]):has(.rb5[open]):has(.rb6[open]):has(.rb7[open]):has(.rb8[open]):has(.rb9[open]) .ending5 {
  display: none !important;
}

/* hide the master wrapper when an ending's conditions are met */
figure.main_thing:has(details.option_work[open]):has(details.parent_details:not([open]) > details.cu1[open]):has(.work_upload_button2[open]) .master_wrapper, figure.main_thing:has(details.option_work[open]):has(details.parent_details:not([open]) > details.cu2[open]):has(.work_upload_button2[open]) .master_wrapper, figure.main_thing:has(.report_button_clicked[open]):has(.trigger_ending3[open]) .master_wrapper, figure.main_thing:has(.trigger_ending4[open]) .master_wrapper, figure.main_thing:has(.report_button_clicked[open]):has(.trigger_ending5[open]) .master_wrapper, figure.main_thing:has(.report_button_clicked[open]):has(.rb1[open]):has(.rb2[open]):has(.rb3[open]):has(.rb4[open]):has(.rb5[open]):has(.rb6[open]):has(.rb7[open]):has(.rb8[open]):has(.rb9[open]) .master_wrapper {
  display: none;
}

/* hide the 'connection established' stuff when an ending's conditions are met */
figure.main_thing:has(details.option_work[open]):has(details.parent_details:not([open]) > details.cu1[open]):has(.work_upload_button2[open]) .ucb_things, figure.main_thing:has(details.option_work[open]):has(details.parent_details:not([open]) > details.cu2[open]):has(.work_upload_button2[open]) .ucb_things, figure.main_thing:has(.report_button_clicked[open]):has(.trigger_ending3[open]) .ucb_things, figure.main_thing:has(.trigger_ending4[open]) .ucb_things, figure.main_thing:has(.report_button_clicked[open]):has(.trigger_ending5[open]) .ucb_things, figure.main_thing:has(.report_button_clicked[open]):has(.rb1[open]):has(.rb2[open]):has(.rb3[open]):has(.rb4[open]):has(.rb5[open]):has(.rb6[open]):has(.rb7[open]):has(.rb8[open]):has(.rb9[open]) .ucb_things {
  display: none;
}


/* extra stuff for user help */

.easy_mode {
  display: inline-block;
  background: #21B521;
  width: 80px;
  padding: 2px 5px;
  text-align: center;
  border: 4px double green;
  border-radius: 5px 5px;
  color: #00FF00;
}

.easy_mode[open] {
  background: #21B521;
  width: 100px;
  padding: 2px 5px;
  text-align: center;
  border: 4px double #00FF00;
  border-radius: 5px 5px;
  color: darkgreen;
}

.easy_mode[open] > summary::after {
  content: ' on!'
}

figure.main_thing:has(.easy_mode[open]) .ee1 > summary, figure.main_thing:has(.easy_mode[open]) .ee2 > summary, figure.main_thing:has(.easy_mode[open]) .dui_caption_nope, figure.main_thing:has(.easy_mode[open]) .ee4 > summary {
  color: #00FF00;
}
